<%- include('./partials/header') %>

<div class="movies-page-container">
  <div class="movies-header-row">
    <h1 class="movies-heading">Browse Movies</h1>
    <form class="search-bar" method="GET" action="/movies" autocomplete="off">
      <input type="text" name="search" id="movies-search-input" placeholder="Search movies, directors..." value="<%= typeof search !== 'undefined' ? search : '' %>" autocomplete="off" />
      <button type="submit">🔍</button>
    </form>
    <div id="search-suggestions" class="autocomplete-suggestions"></div>
  </div>

  <% if (!titles || titles.length === 0) { %>
    <p class="text-center no-movies">No movies found.</p>
  <% } else { %>
    <div class="movies-grid">
      <% titles.forEach(movie => { %>
        <div class="movie-card">
          <a href="/titles/<%= movie._id %>">
            <img src="<%= movie.imageUrl || '/default.jpg' %>" alt="<%= movie.name %> poster" class="movie-card-poster" />
          </a>
          <div class="movie-card-info">
            <a href="/titles/<%= movie._id %>" class="movie-card-title"><%= movie.name %></a>
            <div class="movie-card-meta">
              <span class="movie-card-genre"><%= movie.genre %></span>
              <span class="movie-card-year">• <%= movie.releaseYear %></span>
            </div>
            <div class="movie-card-rating">★ <%= typeof movie.averageRating === 'number' ? movie.averageRating.toFixed(1) : '0.0' %></div>
          </div>
        </div>
      <% }) %>
    </div>
  <% } %>
</div>

<%- include('./partials/footer') %>

<script>
(function() {
  const input = document.getElementById('movies-search-input');
  const suggestionBox = document.getElementById('search-suggestions');
  let lastQuery = '';
  let blurTimeout;
  let suggestions = [];
  let activeIndex = -1;
  if (!input || !suggestionBox) return;

  function renderSuggestions() {
    if (!suggestions.length) {
      suggestionBox.style.display = 'none';
      suggestionBox.innerHTML = '';
      return;
    }
    suggestionBox.innerHTML = suggestions.map((s, i) =>
      `<div class="autocomplete-suggestion${i === activeIndex ? ' active' : ''}" data-id="${s._id}" style="padding:0.5rem;cursor:pointer;display:flex;align-items:center;gap:0.5rem;">
        <img src="${s.imageUrl || '/default.jpg'}" alt="" style="width:32px;height:48px;object-fit:cover;border-radius:4px;" />
        <span>${s.name}</span>
      </div>`
    ).join('');
    suggestionBox.style.display = 'block';
  }

  input.addEventListener('input', async function() {
    const q = this.value.trim();
    lastQuery = q;
    activeIndex = -1;
    if (q.length < 2) {
      suggestions = [];
      renderSuggestions();
      return;
    }
    const res = await fetch(`/api/titles/suggest?query=${encodeURIComponent(q)}`);
    suggestions = await res.json();
    if (input.value.trim() !== lastQuery) return; // Prevent race
    renderSuggestions();
  });

  input.addEventListener('keydown', function(e) {
    if (!suggestions.length) return;
    if (e.key === 'ArrowDown') {
      e.preventDefault();
      activeIndex = (activeIndex + 1) % suggestions.length;
      renderSuggestions();
    } else if (e.key === 'ArrowUp') {
      e.preventDefault();
      activeIndex = (activeIndex - 1 + suggestions.length) % suggestions.length;
      renderSuggestions();
    } else if (e.key === 'Enter') {
      if (activeIndex >= 0 && activeIndex < suggestions.length) {
        window.location.href = `/titles/${suggestions[activeIndex]._id}`;
        e.preventDefault();
      }
    } else if (e.key === 'Escape') {
      suggestionBox.style.display = 'none';
    }
  });

  suggestionBox.addEventListener('mousedown', function(e) {
    const target = e.target.closest('.autocomplete-suggestion');
    if (target) {
      window.location.href = `/titles/${target.dataset.id}`;
    }
  });

  input.addEventListener('blur', function() {
    blurTimeout = setTimeout(() => { suggestionBox.style.display = 'none'; }, 120);
  });
  input.addEventListener('focus', function() {
    if (suggestions.length) {
      renderSuggestions();
      suggestionBox.style.display = 'block';
    }
    clearTimeout(blurTimeout);
  });
})();
</script>
